openapi: 3.0.1
info:
  title: Model Derivative
  version: '2.0'
  description: Use the Model Derivative API to translate designs from one CAD format to another.
  x-external: false
  x-error-response-bodies: true
  x-use-rst-examples: true
  x-forge-service-name: model_derivative
  termsOfService: 'https://www.autodesk.com/company/legal-notices-trademarks/terms-of-service-autodesk360-web-services/forge-platform-web-services-api-terms-of-service'
  x-support: 'https://stackoverflow.com/questions/tagged/autodesk-model-derivative'
  contact:
    name: Autodesk Plaform Services
    url: 'https://aps.autodesk.com/'
    email: aps.help@autodesk.com
security:
  - 2-legged:
      - 'data:read'
      - 'data:write'
  - 3-legged:
      - 'data:read'
      - 'data:write'
servers:
  - url: 'https://developer.api.autodesk.com'
tags:
  - name: Informational
  - name: Jobs
  - name: Manifest
  - name: Derivatives
  - name: Thumbnails
  - name: Metadata
components:
  securitySchemes:
    2-legged:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://developer.api.autodesk.com/authentication/v1/authenticate'
          scopes:
            'data:read': read your data
            'data:write': modify your data
            'data:create': create new data
            'data:search': search data
      description: App context required.
    3-legged:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://developer.api.autodesk.com/authentication/v1/authorize'
          tokenUrl: 'https://developer.api.autodesk.com/authentication/v1/gettoken'
          scopes:
            'data:read': read your data
            'data:write': modify your data
            'data:create': create new data
            'data:search': search data
      description: User context required.
    3-legged-implicit:
      description: 3-legged implicit flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://developer.api.autodesk.com/authentication/v1/authorize'
          scopes:
            'data:read': read application data
            'data:write': write application data
            'data:create': create new application data
  parameters:
    accept-encoding:
      name: Accept-Encoding
      in: header
      schema:
        type: string
      description: |
        A comma separated list of the algorithms you want the response to be encoded in, specified in the order of preference.  

        If you specify ``gzip`` or ``*``, content is compressed and returned in gzip format.
    x-ads-force:
      name: x-ads-force
      in: header
      required: false
      schema:
        type: boolean
      description: |
        ``true``: Forces the system to parse property data all over again. Use this option to retrieve an object tree when previous attempts have failed.

        ``false``: (Default) Use previously parsed property data to extract the object tree.
    x-ads-derivative-format:
      name: x-ads-derivative-format
      in: header
      required: false
      schema:
        $ref: '#/components/schemas/XAdsDerivativeFormat'
      description: |
        Specifies what Object IDs to return, if the design has legacy SVF derivatives generated by the BIM Docs service. Possible values are:  

        - latest - (Default) Return SVF2 Object IDs. 
        - fallback - Return SVF Object IDs.  

        **Note**  

        1. This parameter applies only to designs with legacy SVF derivatives generated by the BIM 360 Docs service. 
        2. The BIM 360 Docs service now generates SVF2 derivatives. SVF2 Object IDs may not be compatible with the SVF Object IDs previously generated by the BIM 360 Docs service. Setting this header to fallback may resolve backward compatibility issues resulting from Object IDs of legacy SVF derivatives being retained on the client side. 
        3. If you use this parameter with one derivative (URN), you must use it consistently across the following operations for that derivative. 

          - `Submit Translation Job <en/docs/model-derivative/v2/reference/http/job-POST>`_ (for OBJ output) 
          - `Fetch Object Tree <en/docs/model-derivative/v2/reference/http/urn-metadata-modelguid-GET>`_
          - `Fetch All Properties <en/docs/model-derivative/v2/reference/http/urn-metadata-guid-properties-GET>`_
    forceget:
      name: forceget
      in: query
      required: false
      schema:
        type: string
      description: |
        - ``true``: ``true``: Retrieves large resources, even beyond the 20 MB limit. If exceptionally large (over 800 MB), the system acts as if ``forceget`` is ``false``. 
        - ``false``:  (Default) Does not retrieve resources if they are larger than 20 MB.
  headers:
    x-ads-startup-time:
      description: 'The service startup time with data format ``EEE MMM dd HH:mm:ss Z yyyy``.'
      schema:
        type: string
    x-ads-app-identifier:
      description: 'The service identifier. Comprises of the service name, version, and environment.'
      schema:
        type: string
    x-ads-duration:
      description: The request duration in milliseconds.
      schema:
        type: string
    x-ads-troubleshooting:
      description: Provides information about the server failure.
      schema:
        type: string
    x-ads-size:
      description: Size in bytes of the request data. It’s also for 413 resposne code.
      schema:
        type: string
  responses: {}
  schemas:
    View:
      type: string
      x-stoplight:
        id: f25156ebd69f8
      description: Required options for SVF type. Possible values are `2d` and `3d`.
      enum:
        - 2d
        - 3d
      title: ''
    Role:
      type: string
      x-stoplight:
        id: 4dfad8ded59da
      minLength: 1
      enum:
        - 2d
        - 3d
      description: |-
        Type of model view
        Possible values: 2d, 3d
    Payload:
      type: string
      x-stoplight:
        id: 0f4faccbbd8c6
      minLength: 1
      enum:
        - text
        - unit
    ConversionMethod:
      type: string
      x-stoplight:
        id: 90905852a0d0b
      enum:
        - legacy
        - modern
        - v3
      description: |-
        Specifies what IFC loader to use during translation. Available options are:
        - legacy - Use the Navisworks IFC loader.
        - modern - Use the Revit IFC loader (recommended over the legacy option).
        - v3 - Use the newer Revit IFC loader (recommended over the older modern option)
        If both switchLoader and conversionMethod are specified, Model Derivative uses the conversionMethod parameter. If conversionMethod is not specified, Model Derivative uses the switchLoader parameter.
    BuildingStoreys:
      type: string
      x-stoplight:
        id: 9de4932445395
      description: |-
        Specifies how storeys are translated. Available options are:
        - hide - (default) storeys are extracted but not visible by default.
        - show - storeys are extracted and are visible by default.
        - skip - storeys are not translated.
        Note These options are applicable only when conversionMethod is set to modern or v3.
      enum:
        - hide
        - show
        - skip
    Spaces:
      type: string
      x-stoplight:
        id: 496cb45012e93
      description: |-
        Specifies how spaces are translated. Available options are:
        - hide - (default) spaces are translated but are not visible by default.
        - show - spaces are translated and are visible by default.
        - skip - spaces are not translated.
        Note These options are applicable only when conversionMethod is set to modern or v3.
      enum:
        - hide
        - show
        - skip
    OpeningElements:
      type: string
      x-stoplight:
        id: 165e55ef212e5
      description: |
        An option to be specified when the input file type is IFC.
        Specifies how openings are translated. Available options are:
        - hide - (default) openings are translated but are not visible by default.
        - show - openings are translated and are visible by default.
        - skip - openings are not translated.
        Note These options are applicable only when conversionMethod is set to modern or v3.
      enum:
        - hide
        - show
        - skip
    ExtractorVersion:
      type: string
      x-stoplight:
        id: 0ce6aa62598da
      description: |-
        Specifies what version of the Revit translator/extractor to use. Possible values:
        next - Makes the translation job use the newest available version of the translator/extractor. This option is meant to be used by beta testers who wish to test a pre-release version of the translator. If no pre-release version is available, this option makes the translation job use the current official release version.
        previous - Makes the translation job use the previous official release version of the translator/extractor. This option is meant to be used as a workaround in case of regressions caused by a new official release of the translator/extractor.
                If this attribute is not specified, the system uses the current official release version.
      enum:
        - next
        - previous
    MaterialMode:
      type: string
      x-stoplight:
        id: 7503c129e886f
      description: |-
        Specifies the materials to apply to the generated SVF derivatives. Available options are:
        - auto - (Default) Use the current setting of the default view of the input file.
        - basic - Use basic materials.
        - autodesk - Use Autodesk materials.
      enum:
        - auto
        - basic
        - autodesk
    Hierarchy:
      type: string
      x-stoplight:
        id: 473b8ba8deab5
      description: |-
        Specifies how the hierarchy of items are determined.
        Classic: (Default) Uses hardcoded rules to set the hierarchy of items.
        SystemPath: Uses a linked XML or MDB2 properties file to set hierarchy of items. You can use this option to make the organization of items consistent with SmartPlant 3D.

        Notes:
          1. The functioning of the SystemPath depends on the default setting of the property SP3D_SystemPath or System Path.
          2. The pathing delimiter must be \.
          3. If you want to customize further, import the VUE file to Navisworks. After that, use POST job on the resulting Navisworks (nwc/nwd) file.
      enum:
        - Classic
        - SystemPath
    2dView:
      type: string
      x-stoplight:
        id: 0a076028722fa
      description: |-
        The format that 2D views must be rendered to. Available options are:

        - legacy - (Default) Render to a model derivative specific file format.
        - pdf - Render to the PDF file format. This option applies only to Revit 2022 files and newer.
      enum:
        - legacy
        - pdf
    Width:
      type: integer
      x-stoplight:
        id: 538da198a6bd0
      description: 'Set the width. Possible values are `100`, `200` and `400`.'
      enum:
        - 100
        - 200
        - 400
    Height:
      type: integer
      x-stoplight:
        id: 91ad401a43ef2
      description: 'Set the height. Possible values are `100`, `200` and `400`.'
      enum:
        - 100
        - 200
        - 400
    Format:
      type: string
      x-stoplight:
        id: 4194abf8ad124
      description: Default format is `binary`. Possible values are `binary` or `ascii`.
      default: binary
      enum:
        - binary
        - ascii
    ExportFileStructure:
      type: string
      x-stoplight:
        id: 7de74ba445b4e
      description: |
        `single` (default): creates one STL file for all the input files (assembly file)

        `multiple`: creates a separate STL file for each object
      default: single
      enum:
        - single
        - multiple
    ApplicationProtocol:
      type: string
      x-stoplight:
        id: e8b97471468f8
      description: |
        A STEP file can be generated with the following Application Protocols: `203` for configuration controlled design, `214` for core data for automotive mechanical design processes, `242` for managed model based 3D engineering. By default, `214` will be exported.
      default: '214'
      enum:
        - '203'
        - '214'
        - '242'
    SurfaceType:
      type: string
      x-stoplight:
        id: 54bbe66ea757d
      description: 'Possible values are `bounded`, `trimmed` and `wireframe`. By default it is set to bounded surface.'
      default: bounded
      enum:
        - bounded
        - trimmed
        - wireframe
    SheetType:
      type: string
      x-stoplight:
        id: c82b15e3d6477
      description: 'Export the sheet body to IGES. `open`, `shell`, `surface` or `wireframe`. By default, it is set to `surface`.'
      default: surface
      enum:
        - open
        - surface
        - shell
        - wireframe
    SolidType:
      type: string
      x-stoplight:
        id: dd5831c11180b
      description: 'Export the solid body to IGES `solid`, `surface` or `wireframe`. By default, it is set to `solid`.'
      default: solid
      enum:
        - solid
        - surface
        - wireframe
    Unit:
      type: string
      x-stoplight:
        id: c8830955fe86d
      description: |-
        Translate models into different units; this causes the values to change. For example, from millimeters (10, 123, 31) to centimeters (1.0, 12.3, 3.1). If the source unit or the unit you are translating into is not supported, the values remain unchanged.
        Possible values:
        meter, decimeter, centimeter, millimeter, micrometer, nanometer
        yard, foot, inch, mil, microinch
        Note that this feature does not support F3D files.
      enum:
        - meter
        - decimeter
        - centimeter
        - millimeter
        - micrometer
        - nanometer
        - yard
        - foot
        - inch
        - mil
        - microinch
    XAdsRole:
      type: string
      x-stoplight:
        id: 9f2eb207e596c
      enum:
        - rendered
        - extracted
      description: 'The source of the thumbnail:  rendered: generated pursuant to this API call extracted: obtained from the original design file'
    XAdsJobStatus:
      type: string
      x-stoplight:
        id: fe8004987d684
      enum:
        - inprogress
        - success
        - failed
        - timedout
      description: 'The job status of current design  Possible values: inprogress, success, failed, timedout'
    Region:
      type: string
      x-stoplight:
        id: bc87c43c3a366
      description: |
        Region in which to store references. Possible values: US, EMEA. By default, it is set to US.
      enum:
        - US
        - EMEA
    Formats:
      description: 'Returns an up-to-date list of supported translations, which you can use to identify which types of derivatives are supported for each source file type'
      type: object
      x-examples:
        example-1:
          formats:
            dwg:
              - f2d
              - f3d
              - rvt
            fbx:
              - f3d
            ifc:
              - rvt
            iges:
              - f3d
              - fbx
              - iam
              - ipt
              - wire
            obj:
              - asm
              - f3d
              - fbx
              - iam
              - ipt
              - neu
              - prt
              - sldasm
              - sldprt
              - smb
              - smt
              - step
              - stp
              - stpz
              - wire
              - x_b
              - x_t
              - asm\.\d+$
              - neu\.\d+$
              - prt\.\d+$
            step:
              - f3d
              - fbx
              - iam
              - ipt
              - smb
              - smt
              - wire
            stl:
              - f3d
              - fbx
              - iam
              - ipt
              - wire
            svf:
              - 3dm
              - 3ds
              - a
              - asm
              - axm
              - brd
              - catpart
              - catproduct
              - cgr
              - collaboration
              - dae
              - ddx
              - ddz
              - dgk
              - dgn
              - dlv3
              - dmt
              - dwf
              - dwfx
              - dwg
              - dwt
              - dxf
              - emodel
              - exp
              - f3d
              - fbrd
              - fbx
              - fsch
              - g
              - gbxml
              - glb
              - gltf
              - iam
              - idw
              - ifc
              - ifw
              - ige
              - iges
              - igs
              - ipt
              - iwm
              - jt
              - max
              - model
              - mpf
              - msr
              - neu
              - nwc
              - nwd
              - obj
              - osb
              - par
              - pdf
              - pmlprj
              - pmlprjz
              - prt
              - psm
              - psmodel
              - rcp
              - rvt
              - sab
              - sat
              - sch
              - session
              - skp
              - sldasm
              - sldprt
              - smb
              - smt
              - ste
              - step
              - stl
              - stla
              - stlb
              - stp
              - stpz
              - vpb
              - vue
              - wire
              - x_b
              - x_t
              - xas
              - xpr
              - zip
              - asm\.\d+$
              - neu\.\d+$
              - prt\.\d+$
            svf2:
              - 3dm
              - 3ds
              - a
              - asm
              - axm
              - brd
              - catpart
              - catproduct
              - cgr
              - collaboration
              - dae
              - ddx
              - ddz
              - dgk
              - dgn
              - dlv3
              - dmt
              - dwf
              - dwfx
              - dwg
              - dwt
              - dxf
              - emodel
              - exp
              - f3d
              - fbrd
              - fbx
              - fsch
              - g
              - gbxml
              - glb
              - gltf
              - iam
              - idw
              - ifc
              - ifw
              - ige
              - iges
              - igs
              - ipt
              - iwm
              - jt
              - max
              - model
              - mpf
              - msr
              - neu
              - nwc
              - nwd
              - obj
              - osb
              - par
              - pdf
              - pmlprj
              - pmlprjz
              - prt
              - psm
              - psmodel
              - rcp
              - rvt
              - sab
              - sat
              - sch
              - session
              - skp
              - sldasm
              - sldprt
              - smb
              - smt
              - ste
              - step
              - stl
              - stla
              - stlb
              - stp
              - stpz
              - vpb
              - vue
              - wire
              - x_b
              - x_t
              - xas
              - xpr
              - zip
              - asm\.\d+$
              - neu\.\d+$
              - prt\.\d+$
            thumbnail:
              - 3dm
              - 3ds
              - a
              - asm
              - axm
              - axmf
              - brd
              - catpart
              - catproduct
              - cgr
              - collaboration
              - dae
              - ddx
              - ddz
              - dgk
              - dgn
              - dlv3
              - dmt
              - dwf
              - dwfx
              - dwg
              - dwgx
              - dwt
              - dxf
              - emodel
              - exp
              - f2d
              - f3d
              - fbrd
              - fbx
              - flbr
              - fprj
              - fsch
              - g
              - gbxml
              - glb
              - gltf
              - iam
              - idw
              - ifc
              - ifw
              - ige
              - iges
              - igs
              - ipt
              - iwm
              - jt
              - max
              - model
              - mpf
              - msr
              - neu
              - nwc
              - nwd
              - obj
              - osb
              - par
              - pdf
              - pmlprj
              - pmlprjz
              - prt
              - psm
              - psmodel
              - rcp
              - rva
              - rvt
              - sab
              - sat
              - sch
              - session
              - skp
              - sldasm
              - sldprt
              - smb
              - smt
              - ste
              - step
              - stl
              - stla
              - stlb
              - stp
              - stpz
              - vpb
              - vue
              - wire
              - x_b
              - x_t
              - xas
              - xpr
              - zip
              - asm\.\d+$
              - neu\.\d+$
              - prt\.\d+$
      properties:
        formats:
          type: object
          description: 'A dictionary object that contains a collection of key-value pairs, where each pair represents the target file format and the corresponding source file formats.'
          additionalProperties:
            type: object
            description: |
              Key-value pairs. The key is the target file format. The value is an array of source design file formats that can be translated to the specified target file format
      title: ''
    ObjectTree:
      description: ''
      type: object
      x-examples:
        example-1:
          data:
            type: objects
            objects:
              - objectid: 1
                name: A5
                objects:
                  - objectid: 2
                    name: Model
                    objects:
                      - objectid: 3
                        name: Bottom
                        objects:
                          - objectid: 4
                            name: Box
                      - objectid: 5
                        name: Pillar
                        objects:
                          - objectid: 6
                            name: Cylinder
                      - objectid: 7
                        name: Top
                        objects:
                          - objectid: 8
                            name: Box
      properties:
        data:
          type: object
          description: Envelope that contains the returned data.
          required:
            - type
            - objects
          properties:
            type:
              type: string
              description: The type of data that is returned. Always ``objects``.
              minLength: 1
            objects:
              type: array
              description: Collection of "objects".
              uniqueItems: true
              minItems: 1
              items:
                type: object
                properties:
                  objectid:
                    type: number
                    description: A non-persistent ID that is assigned to an object at translation time.
                  name:
                    type: string
                    description: Name of the object.
                    minLength: 1
                  objects:
                    type: array
                    description: Optional collection of "children" objects within the hierarchy.
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        objectid:
                          type: number
                          description: A non-persistent ID that is assigned to an object at translation time.
                        name:
                          type: string
                          minLength: 1
                          description: Name of the object
                        objects:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            type: object
                            properties:
                              objectid:
                                type: number
                                description: A non-persistent ID that is assigned to an object at translation time.
                              name:
                                type: string
                                minLength: 1
                                description: Name of the object
                              objects:
                                type: array
                                uniqueItems: true
                                minItems: 1
                                items:
                                  type: object
                                  properties:
                                    objectid:
                                      type: number
                                      description: A non-persistent ID that is assigned to an object at translation time.
                                    name:
                                      type: string
                                      minLength: 1
                                      description: Name of the object
                                  required:
                                    - objectid
                                    - name
                            required:
                              - objectid
                              - name
                      required:
                        - objectid
                        - name
                required:
                  - objectid
                  - name
      required:
        - data
    ModelViews:
      type: object
      x-examples:
        example-1:
          data:
            type: metadata
            metadata:
              - name: NAVISWORKS/IFC EXPORT
                role: 3d
                guid: 04b9a71d-9015-0a7b-338b-8522a705a8d7
              - name: New Construction
                role: 3d
                guid: 1d6e48c5-e4a4-8ca5-5b02-3f2acc354470
                isMasterView: true
              - name: 001 - 4128-AA-DC-681100**_IS01
                role: 2d
                guid: eea006f7-042b-c298-d497-9ef4047e8378
      properties:
        data:
          type: object
          description: An envelope that contains the return data.
          required:
            - type
            - metadata
          properties:
            type:
              type: string
              minLength: 1
              description: The type of data that is returned.
            metadata:
              type: array
              uniqueItems: true
              minItems: 1
              description: 'Ann array of objects, where each object represents a Model View.'
              items:
                type: object
                description: An array of flat JSON objects representing metadata.
                properties:
                  name:
                    type: string
                    minLength: 1
                    description: Name of the Model View.
                  guid:
                    type: string
                    minLength: 1
                    description: Unique ID for the Model View.
                  role:
                    $ref: '#/components/schemas/Role'
                  isMasterView:
                    type: boolean
                    description: |-
                      ``true``: Model View is a Master View derived from a Revit file.

                      ``false``: Model View is not a Master View.
                required:
                  - name
                  - guid
                  - role
                  - isMasterView
      required:
        - data
    AllProperties:
      description: ''
      type: object
      x-examples:
        example-1:
          data:
            type: properties
            collection:
              - objectid: 1
                name: A5
                externalId: mou0zG8ViUOsqUzhb4TUiA
                properties:
                  Name: A5
              - objectid: 2
                name: Model
                externalId: z4u0zG8ViUOsqUzhb4TUiA
                properties:
                  Component Name: Model
                  Name: Model
                  Design Tracking Properties:
                    Design State: WorkInProgress
                    Designer: ADSK
                    File Subtype: Assembly
                  File Properties:
                    Author: ADSK
                    Creation Date: '2012-Jul-09 20:18:20'
                    Original System: Autodesk Inventor 2017
                    Part Number: Model
                  Mass Properties:
                    Area: 19772.676 millimeter^2
                    Volume: 83673.946 millimeter^3
              - objectid: 3
                name: Bottom
                externalId: 0Yu0zG8ViUOsqUzhb4TUiA
                properties:
                  Component Name: A5-P1
                  Name: Bottom
                  Design Tracking Properties:
                    Design State: WorkInProgress
                    Designer: ADSK
                    File Subtype: Modeling
                  File Properties:
                    Author: ADSK
                    Creation Date: '2012-Jul-09 20:18:35'
                    Original System: Autodesk Inventor 2017
                    Part Number: Bottom
                  Mass Properties:
                    Area: 7000 millimeter^2
                    Volume: 25000 millimeter^3
              - objectid: 4
                name: Box
                externalId: 1Iu0zG8ViUOsqUzhb4TUiA
                properties:
                  'Center of Gravity:': '-13.452 mm, -9.879 mm, -40.735 mm'
                  Name: Box
              - objectid: 5
                name: Pillar
                externalId: 1ou0zG8ViUOsqUzhb4TUiA
                properties:
                  Component Name: Pillar
                  Name: Pillar
                  Design Tracking Properties:
                    Design State: WorkInProgress
                    Designer: ADSK
                    File Subtype: Modeling
                  File Properties:
                    Author: ADSK
                    Creation Date: '2012-Jul-09 20:18:35'
                    Original System: Autodesk Inventor 2017
                    Part Number: Pillar
                  Mass Properties:
                    Area: 7000 millimeter^2
                    Volume: 25000 millimeter^3
              - objectid: 6
                name: Cylinder
                externalId: 2Iu0zG8ViUOsqUzhb4TUiA
                properties:
                  'Mass:': 0.012 gram
                  Name: Cylinder
              - objectid: 7
                name: Top
                externalId: 2ou0zG8ViUOsqUzhb4TUiA
                properties:
                  Component Name: Top
                  Name: Top
                  Design Tracking Properties:
                    Design State: WorkInProgress
                    Designer: ADSK
                    File Subtype: Modeling
                  File Properties:
                    Author: ADSK
                    Creation Date: '2012-Jul-09 20:19:38'
                    Original System: Autodesk Inventor 2017
                    Part Number: Top
                  Mass Properties:
                    Area: 5772.676 millimeter^2
                    Volume: 33673.946 millimeter^3
              - objectid: 8
                name: Box
                externalId: 3Iu0zG8ViUOsqUzhb4TUiA
                properties:
                  Material: ABS Plastic
                  Name: Box
      properties:
        data:
          type: object
          required:
            - type
            - collection
          description: An envelope that encapsulates the return data.
          properties:
            type:
              type: string
              minLength: 1
              description: The type of data that is returned. Always ``properties``.
            collection:
              type: array
              uniqueItems: true
              minItems: 1
              description: 'A non-hierarchical list of objects contained in the specified Model View. Each object has a ``properties`` attribute, which contains the properties of that object.'
              items:
                type: object
                properties:
                  objectid:
                    type: number
                    description: |
                      Unique identifier of the object.

                      **Note:** The ``objectid`` is a non-persistent ID assigned to an object when a design file is translated to SVF or SVF2. So:

                      - The ``objectid`` of an object can change if the design is translated to SVF or SVF2 again.
                      - If you require a persistent ID to reference an object, use ``externalId``.
                  name:
                    type: string
                    minLength: 1
                    description: Name of the object.
                  externalId:
                    type: string
                    minLength: 1
                    description: 'A unique identifier of the object as defined in the source design. For example, ``UniqueID`` in Revit files.'
                  properties:
                    type: object
                    description: 'A JSON object containing dictionary objects (key value pairs), where the key is the property name and the value is the value of the property.'
                required:
                  - objectid
                  - name
                  - externalId
      required:
        - data
    SpecificProperties:
      description: ''
      type: object
      x-examples:
        example-1:
          pagination:
            limit: 20
            offset: 0
            totalResults: 2
          data:
            type: properties
            collection:
              - objectid: 438
                name: 'Floor [418183]'
                externalId: d85573c2-f8d5-46ae-966a-ac82fa18f500-00066187
                properties:
                  Constraints:
                    Level: Level 2
                    Height Offset From Level: 0.000 mm
                    Room Bounding: 'Yes'
                    Related to Mass: 'No'
                  Construction:
                    Structure: ''
                    Default Thickness: 300.000 mm
                    Function: Interior
              - objectid: 4269
                name: Generic 150mm
                externalId: e3e052f9-0156-11d5-9301-0000863f27ad-00000153
                properties:
                  Construction:
                    Structure: ''
                    Default Thickness: 150.000 mm
                    Function: Interior
      properties:
        pagination:
          type: object
          description: Envelope that contains pagination information.
          required:
            - limit
            - offset
            - totalResults
          properties:
            limit:
              type: number
              description: The maximum number of properties you requested for this page.
            offset:
              type: number
              description: The number of items skipped (because they were returned in previous pages) when returning this page.
            totalResults:
              type: number
              description: The total number of properties to be returned.
        data:
          type: object
          description: Envelope that contains the return data.
          required:
            - type
            - collection
          properties:
            type:
              type: string
              minLength: 1
              description: The type of data that is returned. Always ``properties``.
            collection:
              type: array
              description: Array of objects with their "properties" as a non-hierarchical list.
              uniqueItems: true
              minItems: 1
              items:
                type: object
                properties:
                  objectid:
                    type: number
                    description: |
                      Unique identifier of the object.

                      **Note:** The ``objectid`` is a non-persistent ID assigned to an object when a design file is translated to SVF or SVF2. So:

                      - The ``objectid`` of an object can change if the design is translated to SVF or SVF2 again.
                      - If you require a persistent ID to reference an object, use ``externalId``.
                  name:
                    type: string
                    description: Name of the object.
                    minLength: 1
                  externalId:
                    type: string
                    description: 'A unique identifier of the object as defined in the source design. For example, ``UniqueID`` in Revit files.'
                    minLength: 1
                  properties:
                    type: object
                    description: 'A JSON object containing dictionary objects (key value pairs), where the key is the property name and the value is the value of the property.'
                required:
                  - objectid
                  - name
                  - externalId
      required:
        - pagination
        - data
      title: ''
    SpecificPropertiesPayload:
      type: object
      x-examples:
        example-1:
          query:
            $in:
              - objectid
              - 4269
              - 438
          fields:
            - objectid
            - name
            - externalId
            - properties.Cons*
          pagination:
            offset: 0
            limit: 20
          payload: text
      properties:
        pagination:
          type: object
          required:
            - offset
            - limit
          description: 'Specifies how to split the response into multiple pages, and return the response one page at a time.'
          properties:
            offset:
              type: number
              description: 'The number of properties to skip. Use this attribute with the ``limit`` attribute to split the properties into multiple pages. To fetch the first page, specify ``offset`` =0 (do not skip any properties). To fetch the second page, specify ``offset`` = value of ``limit`` you specified for the first page. So, the server skips the properties returned on the first page. In general, ``offset`` = ``previous_offset`` + ``previous_limit``. This attribute is 0 by default. The minimum value is 0.'
            limit:
              type: number
              description: 'The maximum number of properties to return in a single page. Use this attribute with the ``offset`` attribute to split the properties into multiple pages. To fetch the first page, specify ``offset`` =0 (do not skip any properties). To fetch the second page, specify ``offset`` = value of ``limit`` you specified for the first page. So, the server skips the search results returned on the first page. In general, ``offset`` = ``previous_offset`` + ``previous_limit``. This attribute is 20 by default. The minimum value is 1 and the maximum is 1000.'
        query:
          oneOf:
            - properties:
                $in:
                  type: array
                  items: {}
                  description: |
                    Returns only the objects with their ``objectid`` or ``externalId`` attribute exactly matching one of the values specified in the array.

                    The first element of the array contains the name of the attribute to match (``objectid`` or ``externalId``). Subsequent elements contain the values to match.

                    For example, if you specify an array as: ``"$in":["objectid",1,2]``, the request will only return the properties of the objects with ``objectid`` 1 and 2. If you specify an array as ``"$in":["externalId","doc_982afc8a","doc_afd75233" ]`` the request will only return the properties of the objects with ``extermnalId`` doc_982afc8a and doc_afd75233.
            - properties:
                $prefix:
                  type: array
                  items: {}
                  description: |
                    Returns only the objects with their ``name`` attribute beginning with the specified string.

                    The first element of the array contains the name of the attribute to match (``name``). The second element contains the string to match. The array can have only two elements. Only the objects whose name begin with the specified string are returned.
            - properties:
                $eq:
                  type: array
                  items: {}
                  description: |
                    Returns only the objects where the value of the specified attribute (``name`` attribute or any numerical property) is exactly equal to the specified value.

                    The first element of the array contains the name of the attribute. This can be the ``name`` attribute or the name of a numerical property. The second element of the array must be the value to match. If the first element is ``name``, must be a string value. If the first element is a numerical property, must be a numeric. The array can only be two elements long.

                    For example, if you specify an array as: ``"$eq":["name","Rectangular"]``, the request will only return the properties of the object named ``Rectangular``. if you specify an array as: ``"$eq":["properties.Dimensions.Width1",0.6]``, the request will return the properties of all objects whose ``properties.Dimensions.Width1`` property is exactly equal to ``0.6``.

                    **Note:** We recommend that you  use ``$between``  instead of ``$eq`` when testing non-integer numeric values for equality. Using ``between`` mitigates floating-point errors.
            - properties:
                $between:
                  type: array
                  items: {}
                  description: |
                    Returns only the objects where the value of the specified numerical property lies between the specified values.

                    The first element of the array contains the name of the property. The next two elements specify the values that the property must lie between. The array can only be three elements long.

                    For example, if you specify an array as: ``"$between":["properties.Dimensions.Width1",1,10]``, the request returns the properties of all objects whose ``properties.Dimensions.Width1`` property is between ``1`` and ``10``.

                    **Note:** The Model Derivative service converts numeric values from their native units to metric base units for comparison. So, you must specify the values to compare in metric base units. For example, if the property you are comparing is a length measurement, you must specify the values  in ``m``.  Not in ``cm``, ``mm``, or ``ft``.
            - properties:
                $le:
                  type: array
                  items: {}
                  description: |
                    Returns only the objects where the value of the specified numerical property is less than or equal to the specified value.

                    The first element of the array contains the name of the property. The next element specifies the values that the property must be less than or equal to. The array can only be two elements long.

                    For example, if you specify an array as: ``"$le":["properties.Dimensions.Width1",10]``, the request returns the properties of all objects whose ``properties.Dimensions.Width1`` property is less than or equal to ``10``.

                    **Note:** The Model Derivative service converts numeric values from their native units to metric base units for comparison. So, the value to compare must be specified in metric base units. For example, if the property you are comparing is a length measurement, you must specify the value  in ``m``.  Not in ``cm``, ``mm``, or ``ft``.
            - properties:
                $ge:
                  type: array
                  items: {}
                  description: |
                    Returns only the objects where the value of the specified numerical property is greater than or equal to the specified value.

                    The first element of the array contains the name of the property. The next element specifies the values that the property must be greater than or equal to. The array can only be two elements long.

                    For example, if you specify an array as: ``"$ge":["properties.Dimensions.Width1",0.1]``, the request returns the properties of all objects whose ``properties.Dimensions.Width1`` property is greater than or equal to  ``0.1``.

                    **Note:** The Model Derivative service converts numeric values from their native units to metric base units for comparison. So, the value to compare must be specified in metric base units. For example, if the property you are comparing is a length measurement, you must specify the value  in ``m``.  Not in ``cm``, ``mm``, or ``ft``.
            - properties:
                $contains:
                  type: array
                  items: {}
                  description: |
                    Returns only the objects where the value of the specified property contains the words specified in a string.

                    The first element of the array contains the name of the property. The second element contains a string containing the words to match. The array can only be two elements long.

                    For example, if you specify an array as: ``"$contains":["properties.Materials and Finishes.Structural Material","Concrete Situ"]``, the request returns the properties of all objects whose ``properties.Materials and Finishes.Structural Material`` property contains the words  ``Concrete`` and ``Situ``. You can specify up to 50 words.
          type: object
        fields:
          type: object
          description: |
            Specifies what properties of the objects to return. If you do not specify this attribute, the response returns all properties.

            Possible values:

            - ``properties`` - Return all properties.
            - ``properties.something``- Return the property named ``something`` and all its children.
            - ``properties.some*`` - Return all properties with names that begin with ``some`` and all their children.
            - ``properties.category.*`` - Return the property named ``category`` and all its children.
            - ``properties.*.property`` - Return any property named ``property`` regardless of its parent.
        payload:
          $ref: '#/components/schemas/Payload'
      required:
        - pagination
        - query
        - fields
        - payload
    Manifest:
      description: ''
      type: object
      x-examples:
        example-1:
          urn: dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0
          derivatives:
            - hasThumbnail: 'true'
              children:
                - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/Resource/model.sdb'
                  role: Autodesk.CloudPlatform.PropertyDatabase
                  mime: application/autodesk-db
                  guid: 6fac95cb-af5d-3e4f-b943-8a7f55847ff1
                  type: resource
                  status: success
                - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/Resource/AECModelData.json'
                  role: Autodesk.AEC.ModelData
                  mime: application/json
                  guid: a4aac952-a3f4-031c-4113-b2d9ac2d0de6
                  type: resource
                  status: success
                - phaseNames: New Construction
                  role: 3d
                  hasThumbnail: 'true'
                  children:
                    - guid: 92b5dec7-790a-45b0-a5e8-cd9f76058c3a-0004bdc0
                      type: view
                      role: 3d
                      name: 3D
                      status: success
                      progress: complete
                      camera:
                        - 63.460731506347656
                        - -69.05099487304688
                        - 85.06072235107422
                        - -12.099991798400879
                        - 6.50972843170166
                        - 9.5
                        - -0.40824830532073975
                        - 0.40824830532073975
                        - 0.8164966106414795
                        - 1.3879648447036743
                        - 0
                        - 1
                        - 1
                    - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/Resource/3D View/3D/3D1.png'
                      role: thumbnail
                      mime: image/png
                      guid: c70aa596-d404-714f-6795-9276087c3800
                      type: resource
                      resolution:
                        - 100
                        - 100
                      status: success
                    - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/Resource/3D View/3D/3D2.png'
                      role: thumbnail
                      mime: image/png
                      guid: 6ef65d1a-4a59-111d-f1ec-4e543bd2712b
                      type: resource
                      resolution:
                        - 200
                        - 200
                      status: success
                    - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/Resource/3D View/3D/3D4.png'
                      role: thumbnail
                      mime: image/png
                      guid: 2c06739e-5164-4f6d-450e-c8833fd2a2ba
                      type: resource
                      resolution:
                        - 400
                        - 400
                      status: success
                    - role: graphics
                      mime: application/autodesk-svf2
                      guid: 1821b502-b91e-f9f2-56e9-2d7cb4b0f4a3
                      type: resource
                  name: 3D
                  guid: 02efa4e8-11ec-5b90-1c0b-4775bad24b58
                  progress: complete
                  type: geometry
                  viewableID: 92b5dec7-790a-45b0-a5e8-cd9f76058c3a-0004bdc0
                  status: success
              name: Link Arc_2018.rvt
              progress: complete
              outputType: svf2
              status: success
            - children:
                - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/preview1.png'
                  role: thumbnail
                  mime: image/png
                  guid: db899ab5-939f-e250-d79d-2d1637ce4565
                  type: resource
                  resolution:
                    - 100
                    - 100
                  status: success
                - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/preview2.png'
                  role: thumbnail
                  mime: image/png
                  guid: 3f6c118d-f551-7bf0-03c9-8548d26c9772
                  type: resource
                  resolution:
                    - 200
                    - 200
                  status: success
                - urn: 'urn:adsk.viewing:fs.file:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6c3ZmX3NhbXBsZV8wMi9MaW5rJTIwQXJjXzIwMTgucnZ0/output/preview4.png'
                  role: thumbnail
                  mime: image/png
                  guid: 4e751806-0920-ce32-e9fd-47c3cec21536
                  type: resource
                  resolution:
                    - 400
                    - 400
                  status: success
              progress: complete
              outputType: thumbnail
              status: success
          hasThumbnail: 'true'
          progress: complete
          type: manifest
          region: US
          version: '1.0'
          status: success
      properties:
        urn:
          type: string
          minLength: 1
          description: The URL-safe Base64 encoded URN of the source design.
        derivatives:
          type: array
          uniqueItems: true
          minItems: 1
          description: 'An array of objects, where each object represents a derivative of the source design.'
          items:
            type: object
            properties:
              hasThumbnail:
                type: string
                minLength: 1
                description: |
                  - ``true``: Derivative has a thumbnail.
                  - ``false``: Derivative has no thumbnail.
              children:
                type: array
                uniqueItems: true
                minItems: 1
                description: 'An array of objects, where each object represents a resource file generated for the derivative during translation. For example, a Model View (Viewable) of the source design.'
                items:
                  type: object
                  properties:
                    phaseNames:
                      type: string
                      minLength: 1
                      description: The name of the phase the entity was generated from.  This attribute is present only on Model Views (Viewables) generated from a Revit source design.
                    role:
                      type: string
                      minLength: 1
                    hasThumbnail:
                      type: string
                      minLength: 1
                    children:
                      type: array
                      uniqueItems: true
                      minItems: 1
                      description: 'An optional array of objects, where each object (of type ``children``) represents another resource file generated for this resource.'
                      items:
                        type: object
                        properties:
                          guid:
                            type: string
                            minLength: 1
                            description: An ID that uniquely identifies the resource file.
                          type:
                            type: string
                            minLength: 1
                            description: Type of resource this JSON object represents.
                          role:
                            type: string
                            minLength: 1
                            description: File type of the resource file.
                          name:
                            type: string
                            minLength: 1
                            description: The name of the resource file.
                          status:
                            type: string
                            minLength: 1
                            description: 'Status of the translation job generating this resource file; Possible values:  ``pending``, ``inprogress``, ``success``, ``failed``, ``timeout``'
                          progress:
                            type: string
                            minLength: 1
                            description: How far the translation job generating this resource file has progressed.
                          camera:
                            type: array
                            items:
                              type: object
                        required:
                          - guid
                          - type
                          - role
                          - name
                          - status
                          - progress
                    name:
                      type: string
                      minLength: 1
                      description: The name of the resource file.
                    guid:
                      type: string
                      minLength: 1
                      description: An ID that uniquely identifies the resource file.
                    progress:
                      type: string
                      minLength: 1
                    type:
                      type: string
                      minLength: 1
                      description: File type of the resource file.
                    viewableID:
                      type: string
                      minLength: 1
                    status:
                      type: string
                      minLength: 1
                      description: 'Status of the translation job generating this resource file; Possible values:  ``pending``, ``inprogress``, ``success``, ``failed``, ``timeout``'
                    isMasterView:
                      type: boolean
                      description: |
                        - ``true``: The resource file is a Model View (Viewable) of a Revit Master View. It contains room and space information.

                        This attribute is present only if:

                        - The derivative is SVF or SVF2.
                        - The source design is a Revit file
                        - The ``generateMasterViews``  advanced option was set to ``true`` when `Submit Translation Job </en/docs/model-derivative/v2/reference/http/job-POST/>`_ was called.
                  required:
                    - phaseNames
                    - role
                    - hasThumbnail
                    - name
                    - guid
                    - progress
                    - type
                    - viewableID
                    - status
              name:
                type: string
                minLength: 1
                description: Name of the derivative.
              progress:
                type: string
                minLength: 1
                description: 'How far the translation job generating this derivative has progressed. Possible values: ``complete``, ``##%``.'
              outputType:
                type: string
                minLength: 1
                description: 'The file type/format of the derivative. Possible values: ``dwg``, ``fbx``, ``ifc``, ``iges``, ``obj`` , ``step``, ``stl``, ``svf``, ``svf2``,  ``thumbnail``.'
              status:
                type: string
                minLength: 1
                description: 'Status of the translation job generating this derivative. Possible values: ``pending``, ``inprogress``, ``success``, ``failed``, ``timeout``'
            required:
              - hasThumbnail
              - name
              - progress
              - outputType
              - status
        hasThumbnail:
          type: string
          minLength: 1
          description: |
            - ``true``: There is a thumbnail for the source design.
            - ``false``: There is no thumbnail for the source design.
        progress:
          type: string
          minLength: 1
          description: 'Overall progress of all translation jobs for the source design. Possible values: ``complete``, ``##%``.'
        type:
          type: string
          minLength: 1
          description: The type of data that is returned. Always ``manifest``.
        region:
          type: string
          minLength: 1
          description: 'The region where the source design and its derivatives are stored. Possible values: ``US``, ``EMEA``.'
        version:
          type: string
          minLength: 1
        status:
          type: string
          minLength: 1
          description: 'Overall status of all translation jobs for the source design. Possible values: ``pending``, ``success``, ``inprogress``, ``failed``, ``timeout``.'
      required:
        - urn
        - derivatives
        - hasThumbnail
        - progress
        - type
        - region
        - version
        - status
    JobPayload:
      type: object
      title: ''
      description: ''
      properties:
        input:
          type: object
          description: An object describing the attributes of the source design.
          required:
            - urn
          properties:
            urn:
              type: string
              description: |
                The URL safe Base64 encoded URN of the source design. 

                **Note:** The URN is returned as the ``objectID`` once you complete uploading the source design to APS. This value must be converted to a `Base64 (URL Safe) encoded <http://www.freeformatter.com/base64-encoder.html>`_ string before you can specify it for this attribute.
            compressedUrn:
              type: boolean
              description: |
                - ``true``: The source design is compressed as a zip file. If set to `true`, you need to define the `rootFilename`.'
                - ``false``: (Default) The source design is not compressed.
              default: false
            rootFilename:
              type: string
              description: The file name of the top-level component of the source design.  Mandatory if  ``compressedUrn`` is set to `true`.
            checkReferences:
              type: boolean
              description: |-
                - ``true`` - Instructs the server to check for references and download all referenced files. If the design consists of multiple files (as with Autodesk Inventor assemblies) the translation job fails if this attribute is not set to ``true``.
                - ``false`` - (Default) Does not check for any references.
        output:
          type: object
          description: An object describing the attributes of the requested derivatives.
          required:
            - formats
          properties:
            destination:
              type: object
              description: Specifies where to store generated derivatives.
              properties:
                region:
                  type: string
                  description: |
                    Specifies where to store generated derivatives. Possible values:

                    - ``US``: (Default) Store derivatives at a data center in the United States of America.
                    - ``EMEA``: Store derivatives at a data center in the European Union. 
            formats:
              type: array
              description: 'An array of objects, where each object represents a requested derivative format. You can request multiple derivatives.'
              items:
                $ref: '#/components/schemas/JobPayloadFormat'
        misc:
          type: object
          properties:
            workflow:
              type: string
              description: 'The workflow id created for a webhook, used to listen to Model Derivative events. It needs to be no more than 36 chars, and only ASCII, decimal and hyphen are accepted.'
            workflowAttribute:
              type: object
              description: 'A user-defined JSON object, which you can use to set some custom workflow information. It needs to be less than 1KB and will be ignored if misc.workflow parameter is not set.'
      required:
        - input
        - output
    JobPayloadFormat:
      description: 'Output description object, depends of the type'
      allOf:
        - $ref: '#/components/schemas/JobSvfOutputFormat'
        - $ref: '#/components/schemas/JobSvf2OutputFormat'
        - $ref: '#/components/schemas/JobThumbnailOutputFormat'
        - $ref: '#/components/schemas/JobStlOutputFormat'
        - $ref: '#/components/schemas/JobStepOutputFormat'
        - $ref: '#/components/schemas/JobIgesOutputFormat'
        - $ref: '#/components/schemas/JobObjOutputFormat'
        - $ref: '#/components/schemas/JobDwgOutputFormat'
        - $ref: '#/components/schemas/JobIfcOutputFormat'
      title: ''
    JobSvfOutputFormat:
      type: object
      properties:
        views:
          type: array
          items:
            $ref: '#/components/schemas/View'
        type:
          type: string
        advanced:
          type: object
          properties:
            requestedLinkageIDs:
              type: array
              description: An array containing user data linkage IDs of the linkage data to be extracted from the DGN file. Linkage data is not extracted if you do not specify this attribute.
              items:
                type: integer
            2dviews:
              $ref: '#/components/schemas/2dView'
            conversionMethod:
              $ref: '#/components/schemas/ConversionMethod'
            buildingStoreys:
              $ref: '#/components/schemas/BuildingStoreys'
            spaces:
              $ref: '#/components/schemas/Spaces'
            openingElements:
              $ref: '#/components/schemas/OpeningElements'
            hiddenObjects:
              type: boolean
              description: |
                Specifies whether hidden objects must be extracted or not.
                true: Extract hidden objects from the input file.
                false: (Default) Do not extract hidden objects from the input file.
            basicMaterialProperties:
              type: boolean
              description: |
                Specifies whether basic material properties must be extracted or not.
                true: Extract properties for basic materials.
                false: (Default) Do not extract properties for basic materials.
            autodeskMaterialProperties:
              type: boolean
              description: |-
                Specifies how to handle Autodesk material properties.
                true: Extract properties for Autodesk materials.
                false: (Default) Do not extract properties for Autodesk materials.
            timelinerProperties:
              type: boolean
              description: |-
                Specifies whether timeliner properties must be extracted or not.
                true: Extract timeliner properties.
                false: (Default) Do not extract timeliner properties.
            extractorVersion:
              $ref: '#/components/schemas/ExtractorVersion'
            generateMasterViews:
              type: boolean
              description: |-
                Generates master views when translating from the Revit input format to SVF. This option is ignored for all other input formats. This attribute defaults to false.

                Master views are 3D views that are generated for each phase of the Revit model. A master view contains all elements (including “room” elements) present in the host model for that phase. The display name of a master view defaults to the name of the phase it is generated from. However, if a view with that name already exists, the Model Derivative service appends a suffix to the default display name.

                Notes:
                1. Master views do not contain elements from linked models.
                2. Enabling this option can increase the time it takes to translate the model.
            materialMode:
              $ref: '#/components/schemas/MaterialMode'
            hierarchy:
              $ref: '#/components/schemas/Hierarchy'
    JobSvf2OutputFormat:
      type: object
      properties:
        views:
          type: array
          items:
            $ref: '#/components/schemas/View'
        type:
          type: string
        advanced:
          type: object
          properties:
            requestedLinkageIDs:
              type: array
              description: An array containing user data linkage IDs of the linkage data to be extracted from the DGN file. Linkage data is not extracted if you do not specify this attribute.
              items:
                type: integer
            2dviews:
              $ref: '#/components/schemas/2dView'
            conversionMethod:
              $ref: '#/components/schemas/ConversionMethod'
            buildingStoreys:
              $ref: '#/components/schemas/BuildingStoreys'
            spaces:
              $ref: '#/components/schemas/Spaces'
            openingElements:
              $ref: '#/components/schemas/OpeningElements'
            hiddenObjects:
              type: boolean
              description: |
                Specifies whether hidden objects must be extracted or not.
                true: Extract hidden objects from the input file.
                false: (Default) Do not extract hidden objects from the input file.
            basicMaterialProperties:
              type: boolean
              description: |
                Specifies whether basic material properties must be extracted or not.
                true: Extract properties for basic materials.
                false: (Default) Do not extract properties for basic materials.
            autodeskMaterialProperties:
              type: boolean
              description: |-
                Specifies how to handle Autodesk material properties.
                true: Extract properties for Autodesk materials.
                false: (Default) Do not extract properties for Autodesk materials.
            timelinerProperties:
              type: boolean
              description: |-
                Specifies whether timeliner properties must be extracted or not.
                true: Extract timeliner properties.
                false: (Default) Do not extract timeliner properties.
            extractorVersion:
              $ref: '#/components/schemas/ExtractorVersion'
            generateMasterViews:
              type: boolean
              description: |-
                Generates master views when translating from the Revit input format to SVF. This option is ignored for all other input formats. This attribute defaults to false.

                Master views are 3D views that are generated for each phase of the Revit model. A master view contains all elements (including “room” elements) present in the host model for that phase. The display name of a master view defaults to the name of the phase it is generated from. However, if a view with that name already exists, the Model Derivative service appends a suffix to the default display name.

                Notes:
                1. Master views do not contain elements from linked models.
                2. Enabling this option can increase the time it takes to translate the model.
            materialMode:
              $ref: '#/components/schemas/MaterialMode'
            hierarchy:
              $ref: '#/components/schemas/Hierarchy'
    JobThumbnailOutputFormat:
      type: object
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for `thumbnail` type.
          properties:
            width:
              $ref: '#/components/schemas/Width'
            height:
              $ref: '#/components/schemas/Height'
    JobStlOutputFormat:
      type: object
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for `stl` type.
          properties:
            format:
              $ref: '#/components/schemas/Format'
            exportColor:
              type: boolean
              description: 'Color is exported by default. If set to `true`, color is exported. If set to `false`, color is not exported.'
              default: true
            exportFileStructure:
              $ref: '#/components/schemas/ExportFileStructure'
    JobStepOutputFormat:
      type: object
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for `step` type.
          properties:
            applicationProtocol:
              $ref: '#/components/schemas/ApplicationProtocol'
            tolerance:
              type: number
              description: Possible values are between `0` and `1`. By default it is set at 0.001.
              format: float
              default: 0.001
    JobIgesOutputFormat:
      type: object
      x-examples:
        example-1:
          type: svf
          advanced:
            tolerance: 0.001
            surfaceType: bounded
            sheetType: surface
            solidType: solid
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for `iges` type.
          properties:
            tolerance:
              type: number
              description: Possible values are between `0` and `1`. By default it is set at 0.001.
              format: float
              default: 0.001
            surfaceType:
              $ref: '#/components/schemas/SurfaceType'
            sheetType:
              $ref: '#/components/schemas/SheetType'
            solidType:
              $ref: '#/components/schemas/SolidType'
    JobObjOutputFormat:
      type: object
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for `obj` type.
          properties:
            exportFileStructure:
              $ref: '#/components/schemas/ExportFileStructure'
            unit:
              $ref: '#/components/schemas/Unit'
            modelGuid:
              type: string
              description: Required for geometry extractions. The Model View ID (guid).
            objectIds:
              type: array
              description: |
                Required for geometry extractions. List object ids to be translated. -1 will extract the entire model.
              items:
                type: integer
    JobDwgOutputFormat:
      type: object
      x-examples:
        example-1:
          type: svf
          views:
            - 2d
      description: A JSON object representing the requested output types.
      properties:
        type:
          type: string
        advanced:
          type: object
          description: Advanced options for dwg output type.
          properties:
            exportSettingName:
              type: string
              description: The export settings should be one of the DWG Export settings name pre-saved in the document.
    JobIfcOutputFormat:
      type: object
      x-examples:
        example-1:
          type: svf
          views:
            - 2d
      description: A JSON object representing the requested output types.
      properties:
        type:
          type: string
        advanced:
          type: object
          description: exportSettingName
          properties:
            exportSettingName:
              type: string
              description: The export settings should be one of the IFC Export settings pre-saved in the document.
    Job:
      required:
        - acceptedJobs
        - result
        - urn
      type: object
      properties:
        result:
          type: string
          description: reporting success status
        urn:
          type: string
          description: the urn identifier of the source file
        acceptedJobs:
          required:
            - output
          type: object
          properties:
            output:
              type: object
              properties: {}
              description: identical to the request body. For more information please see the request body structure above.
          description: list of the requested outputs
    XAdsDerivativeFormat:
      type: string
      x-stoplight:
        id: 143cf5356d397
      title: XAdsDerivativeFormat
      description: |-
        Specifies what Object IDs to return, if the design has legacy SVF derivatives generated by the BIM Docs service. Possible values are: - latest - (Default) Return SVF2 Object IDs.
        - fallback - Return SVF Object IDs.
      enum:
        - latest
        - fallback
    DerivativeDownload:
      title: DerivativeDownload
      x-stoplight:
        id: y7tfjbr0mg37l
      type: object
      properties:
        etag:
          type: string
          x-stoplight:
            id: n02wcow4l8ho8
        size:
          type: number
          x-stoplight:
            id: nc1if4dbnyhno
        url:
          type: string
          x-stoplight:
            id: 3rc3ezbezs3b4
        content-type:
          type: string
          x-stoplight:
            id: mbi8giry07u86
        expiration:
          type: number
          x-stoplight:
            id: 1ldan1aiao4gr
  requestBodies: {}
paths:
  /modelderivative/v2/designdata/formats:
    get:
      summary: List Supported Formats
      tags:
        - Informational
      responses:
        '200':
          description: 'A list of supported formats was successfully returned. '
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
            Last-Modified:
              schema:
                type: string
              description: 'Indicates the date and time (in ``Day of the week, DD Month YYYY HH:MM:SS GMT`` format) the supported formats were last modified.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formats'
        '304':
          description: Supported formats have not changed since the date specified by the ``If-Modified-Since`` header.
      operationId: get-formats
      description: |-
        Returns an up-to-date list of supported translations. It lets you determine the types of derivatives supported for each source design file type. Furthermore, you can get it to retrieve only the translations that have been updated since a date you specify.

        See the `Supported Translation Formats table </en/docs/model-derivative/v2/overview/supported-translations>`_ for more details.

        **Note:** We keep adding new file formats to our supported translations list, constantly.
      parameters:
        - schema:
            type: string
          in: header
          name: If-Modified-Since
          description: 'Specifies a date in the ``Day of the week, DD Month YYYY HH:MM:SS GMT`` format. The response will contain only the formats modified since the specified date and time. If you specify an invalid date, the response will contain all supported formats. If no changes have been made after the specified date, the service returns HTTP status ``304``, NOT MODIFIED.'
        - $ref: '#/components/parameters/accept-encoding'
      security:
        - 2-legged: []
        - 3-legged: []
        - 3-legged-implicit: []
    parameters: []
  '/modelderivative/v2/designdata/{urn}/metadata':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
    get:
      summary: List Model Views
      tags:
        - Metadata
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelViews'
            application/xml:
              schema:
                type: object
                properties: {}
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
      operationId: get-model-views
      description: |-
        Returns a list of Model Views (Viewables) in the source design specified by the ``urn`` parameter. It also returns an ID that uniquely identifies the Model View. You can use these IDs with other metadata operations to obtain information about the objects within those Model Views.

        Designs created with applications like Fusion 360 and Inventor contain only one Model View per design. Applications like Revit allow multiple Model Views per design.

        **Note:** You can retrieve metadata only from a design that has already been translated to SVF or SVF2.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - $ref: '#/components/parameters/accept-encoding'
  '/modelderivative/v2/designdata/{urn}/metadata/{modelGuid}':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
      - name: modelGuid
        in: path
        required: true
        schema:
          type: string
        description: The ID of the Model View you are extracting the object tree from. Use the `List Model Views </en/docs/model-derivative/v2/reference/http/metadata/urn-metadata-GET>`_ operation to get the IDs of the Model Views in the source design.
    get:
      summary: Fetch Object tree
      tags:
        - Metadata
      operationId: get-object-tree
      description: |
        Retrieves the structured hierarchy of objects, known as an object tree, from the specified Model View (Viewable) within the specified source design. The object tree represents the arrangement and relationships of various objects present in that Model View.

        **Note:** A design file must be translated to SVF or SVF2 before you can retrieve its object tree.  

        Before you call this operation:

        - Use the `List Model Views </en/docs/model-derivative/v2/reference/http/metadata/urn-metadata-GET/>`_ operation to obtain the list of Model Views in the source design.
        - Pick the ID of the Model View you want to query and specify that ID as the value for the ``modelGuid``  parameter.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/x-ads-force'
        - $ref: '#/components/parameters/x-ads-derivative-format'
        - $ref: '#/components/parameters/forceget'
        - schema:
            type: integer
          in: query
          name: objectid
          description: 'If specified, retrieves the sub-tree that has the specified object ID as its parent node. If this parameter is not specified, retrieves the entire object tree.'
        - schema:
            type: string
          in: query
          name: level
          description: 'Specifies how many child levels of the hierarchy to return, when the ``objectid``  parameter is specified. Currently supports only ``level`` = ``1``.'
      responses:
        '200':
          description: Success
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
            x-ads-size:
              $ref: '#/components/headers/x-ads-size'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectTree'
        '202':
          description: Request accepted but processing not complete. Call this operation iteratively until a 200 is returned.
          content:
            application/json:
              schema:
                type: object
  '/modelderivative/v2/designdata/{urn}/metadata/{modelGuid}/properties':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
      - name: modelGuid
        in: path
        required: true
        schema:
          type: string
        description: 'Unique model view ID. Call GET {urn}/metadata to get the ID'
    get:
      summary: Fetch All Properties
      tags:
        - Metadata
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllProperties'
              examples:
                example-1:
                  value:
                    data:
                      type: string
                      collection:
                        - objectid: 0
                          name: string
                          externalId: string
                          properties:
                            Component Name: string
                            Name: string
                            Design Tracking Properties:
                              Design State: string
                              Designer: string
                              File Subtype: string
                            File Properties:
                              Author: string
                              Creation Date: string
                              Original System: string
                              Part Number: string
                            Mass Properties:
                              Area: string
                              Volume: string
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
            x-ads-size:
              $ref: '#/components/headers/x-ads-size'
        '202':
          description: 'Request accepted but processing not complete. Call this operation again, until you recieve 200 OK.'
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  result:
                    type: string
                    minLength: 1
                required:
                  - result
                x-examples:
                  example-1:
                    result: success
      operationId: get-all-properties
      description: |-
        Returns a list of properties of all objects in the  Model View specified by the ``modelGuid`` parameter. 

        This operation returns properties of all objects by default. However, you can restrict the results to a specific object by specifying its ID as the ``objectid`` parameter.

        Properties are returned as a flat list, ordered, by their ``objectid``. The ``objectid`` is a non-persistent ID assigned to an object when the source design is translated to the SVF or SVF2 format. This means that:

        - A design file must be translated to SVF or SVF2 before you can retrieve properties.
        - The ``objectid`` of an object can change if the design is translated to SVF or SVF2 again. If you require a persistent ID across translations, use ``externalId`` to reference objects, instead of ``objectid``.

        Before you call this operation:

        - Use the `List Model Views </en/docs/model-derivative/v2/reference/http/metadata/urn-metadata-GET/>`_ operation to obtain the list of Model Views (Viewables) in the source design. 
        - Pick the ID of the Model View you want to query and specify that ID as the value for the ``modelGuid`` parameter.

        **Tip**: Use `Fetch Specific Properties </en/docs/model-derivative/v2/reference/http/metadata/urn-metadata-guid-properties-GET/>`_ to retrieve only the objects and properties of interest. What’s more, the response is paginated. So, when the number of properties returned is large, responses start arriving more promptly.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - $ref: '#/components/parameters/accept-encoding'
        - $ref: '#/components/parameters/x-ads-force'
        - $ref: '#/components/parameters/x-ads-derivative-format'
        - schema:
            type: integer
          in: query
          name: objectid
          description: 'The Object ID of the object you want to restrict the response to. If you do not specify this parameter, all properties of all objects within the Model View are returned.  '
        - $ref: '#/components/parameters/forceget'
  '/modelderivative/v2/designdata/{urn}/metadata/{modelGuid}/properties:query':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
      - name: modelGuid
        in: path
        required: true
        schema:
          type: string
        description: 'Unique model view ID. Call GET {urn}/metadata to get the ID'
    post:
      summary: Fetch Specific Properties
      tags:
        - Metadata
      responses:
        '200':
          description: Success
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
            x-ads-size:
              $ref: '#/components/headers/x-ads-size'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecificProperties'
            application/xml:
              schema:
                type: object
                properties: {}
        '202':
          description: 'Request accepted but processing is not complete. Call this operation again, until you receive 200 OK.'
      operationId: fetch-specific-properties
      description: |-
        Queries the objects in the Model View (Viewable) specified by the ``modelGuid`` parameter and returns the specified properties in a paginated list. You can limit the number of objects to be queried by specifying a filter using the ``query`` attribute in the request body.

        **Note:** A design file must be translated to SVF or SVF2 before you can query object properties.  

        Before you call this operation:

        - Use the `List Model Views </en/docs/model-derivative/v2/reference/http/metadata/urn-metadata-GET/>`_ operation to obtain the list of Model Views in the source design.
        - Pick the ID of the Model View you want to query and specify that ID as the value for the ``modelGuid``  parameter.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - $ref: '#/components/parameters/accept-encoding'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecificPropertiesPayload'
  '/modelderivative/v2/designdata/{urn}/thumbnail':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
    get:
      summary: Fetch Thumbnail
      tags:
        - Thumbnails
      responses:
        '200':
          description: Success
          headers:
            x-ads-name:
              schema:
                type: string
              description: File name of the thumbnail.
            x-ads-size:
              description: 'Thumbnail size. Possible values: ``[100,100]``, ``[200,200]``, ``[400,400]``'
              schema:
                type: string
            x-ads-role:
              schema:
                $ref: '#/components/schemas/XAdsRole'
            x-ads-job-status:
              schema:
                $ref: '#/components/schemas/XAdsJobStatus'
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
          content:
            application/json:
              schema:
                type: string
                description: The body response is a binary stream of the thumbnail.
            application/octet-stream:
              schema:
                type: object
            multipart/form-data:
              schema:
                type: object
                properties: {}
      operationId: get-thumbnail
      description: Downloads a thumbnail of the specified source design.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - schema:
            type: integer
            enum:
              - 100
              - 200
              - 400
          in: query
          name: width
          description: |
            Width of thumbnail.  

            Possible values: 100, 200, 400  

            If ``width`` is omitted, but ``height`` is specified, ``width`` defaults to ``height``. If both ``width`` and ``height`` are omitted, the server will return a thumbnail closest to 200, if such a thumbnail is available.
        - schema:
            type: integer
            enum:
              - 100
              - 200
              - 400
          in: query
          name: height
          description: |
            Height of thumbnails.

            Possible values: ``100``, ``200``, ``400``.

            If ``height`` is omitted, but ``width`` is specified, ``height`` defaults to ``width``.  If both ``width`` and ``height`` are omitted, the server will return a thumbnail closest to 200, if such a thumbnail is available.
      x-ads_command_line_example:
        curl -X "GET" -H "Authorization: 'Bearer PtnrvrtSRpWwUi3407QhgvqdUVKL" -v "https://developer.api.autodesk.com/modelderivative/v2/designdata/dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6bW9kZWxkZXJpdmF0aXZlL0E1LnppcA/thumbnail"'
  '/modelderivative/v2/designdata/{urn}/manifest/{derivativeUrn}/signedcookies':
    parameters:
      - name: derivativeUrn
        in: path
        schema:
          type: string
        description: 'The URL-encoded URN of the derivatives. The URN is retrieved from the GET {urn}/manifest endpoint.'
        required: true
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
    get:
      summary: Fetch Derivative Download URL
      tags:
        - Derivatives
      responses:
        '200':
          description: Success
          headers:
            Content-Type:
              schema:
                type: string
              description: application/octet-stream
            Content-Length:
              schema:
                type: string
              description: 'Denotes the size of the derivative, in bytes.'
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            Set-Cookie:
              schema:
                type: string
              description: Signed cookie to use with download URL. There will be three headers in the response named Set-Cookie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DerivativeDownload'
      operationId: get-derivative-url
      description: 'Returns a download URL and a set of signed cookies, which lets you securely download the derivative specified by the `derivativeUrn` URI parameter. The signed cookies have a lifetime of 6 hours. Although you cannot use range headers for this operation, you can use range headers for the returned download URL to download the derivative in chunks, in parallel.'
      parameters:
        - schema:
            type: integer
          in: query
          name: minutes-expiration
          description: 'Specifies how many minutes the signed cookies should remain valid. Default value is 360 minutes. The value you specify must be lower than the default value for this parameter. If you specify a value greater than the default value, the Model Derivative service will return an error with an HTTP status code of 400.'
        - schema:
            type: string
          in: query
          name: response-content-disposition
          description: The value that must be returned with the download URL as the ``response-content-disposition`` query string parameter. Must begin with ``attachment``. This value defaults to the default value corresponding to the derivative/file.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
  '/modelderivative/v2/designdata/{urn}/manifest/{derivativeUrn}':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
      - name: derivativeUrn
        in: path
        schema:
          type: string
        description: 'The URL-encoded URN of the derivatives. The URN is retrieved from the GET {urn}/manifest endpoint.'
        required: true
    head:
      summary: Check Derivative Details
      tags:
        - Derivatives
      responses:
        '200':
          description: Success
          headers:
            Content-Type:
              schema:
                type: string
              description: application/octet-stream
            Content-Length:
              schema:
                type: string
              description: 'Denotes the size of the specified derivative, in bytes.'
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-troubleshooting:
              $ref: '#/components/headers/x-ads-troubleshooting'
        '202':
          description: 'Request accepted but processing not complete. Call this operation again, until getting 200 OK.'
      operationId: head-check-derivative
      description: |-
        Returns information about the specified derivative.

        This operation returns a set of headers similar to that returned by `Download Derivative </en/docs/model-derivative/v2/reference/urn-manifest-derivativeurn-GET>`_.

        You can use this operation to determine the total content length of a derivative before you download it. If the derivative is large, you can choose to download the derivative in chunks, by specifying a chunk size using the Range header parameter.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
  '/modelderivative/v2/designdata/{urn}/manifest':
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
    get:
      summary: Fetch Manifest
      tags:
        - Manifest
      responses:
        '200':
          description: Success
          headers:
            x-ads-app-identifier:
              schema:
                type: string
            x-ads-startup-time:
              schema:
                type: string
            x-ads-duration:
              schema:
                type: string
            x-ads-troubleshooting:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manifest'
      operationId: get-manifest
      description: |-
        Retrieves the manifest of the specified source design.

        The manifest is a JSON file containing information about all the derivatives translated from the specified source design. It contains information such as the URNs of the derivatives, the translation status of each derivative, and much more.

        The first time you translate a source design, the Model Derivative service creates a manifest for that source design. Thereafter, every time you translate that source design, even to a different format, the Model Derivative service updates that manifest. It does not create a new manifest. Instead, it keeps track of all derivatives of that design.  

        When the Model Derivative service starts a translation job (as a result of a request you make using `Submit Translation Job </en/docs/model-derivative/v2/reference/http/jobs/job-POST/>`_), it keeps on updating the manifest at regular intervals. So, you can use the manifest to check the status and progress of each derivative that is being generated. When multiple derivatives have been requested each derivative may complete at a different time. So, each derivative has its own ``status`` attribute. The manifest also contains an overall ``status`` attribute. The overall ``status`` becomes ``complete`` when the ``status`` of all individual derivatives become complete.

        Once the translation status of a derivative is ``complete`` you can download the URN.

        **Note**: You cannot download 3D SVF2 derivatives.
      security:
        - 2-legged:
            - 'data:read'
        - 3-legged:
            - 'data:read'
        - 3-legged-implicit:
            - 'data:read'
      parameters:
        - $ref: '#/components/parameters/accept-encoding'
    delete:
      summary: Delete Manifest
      tags:
        - Manifest
      responses:
        '200':
          description: Success.
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: A message describing outcome of the operation. Always ``success``.
      operationId: delete-manifest
      description: |
        Deletes the manifest of the specified source design. It also deletes all derivatives (translated output files) generated from the source design. However, it does not delete the source design.

        **Note:** This operation is idempotent. So, if you call it multiple times, even when no manifest exists, will still return a successful response (200).
      security:
        - 2-legged:
            - 'data:write'
            - 'data:read'
        - 3-legged:
            - 'data:write'
            - 'data:read'
        - 3-legged-implicit:
            - 'data:write'
            - 'data:read'
  /modelderivative/v2/designdata/job:
    post:
      summary: Submit Translation Job
      tags:
        - Jobs
      responses:
        '200':
          description: Success
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '201':
          description: The requested file type has been previously generated and has not been replaced by the new source file.
      operationId: start-job
      description: |-
        Creates a job to translate the specified source design to another format, generating derivatives of the source design. You can optionaly:

        - Extract selected parts of a design and export the set of geometries in OBJ format.
        - Generate different-sized thumbnails.

        When the translation job runs, progress information and details of the generated derivatives are logged to a JSON file that is called a manifest. A manifest is typically created the first time you translate the source design. Thereafter the system updates the same manifest each time a translation job is executed for that source design. If necessary, you can set the ``x-ads-force`` parameter to ``true``, which deletes the existing manifest and creates a fresh manifest. However, if you do so, all derivatives generated prior to this are deleted.
      security:
        - 2-legged:
            - 'data:read'
            - 'data:write'
            - 'data:create'
        - 3-legged:
            - 'data:read'
            - 'data:write'
            - 'data:create'
        - 3-legged-implicit:
            - 'data:read'
            - 'data:write'
            - 'data:create'
      parameters:
        - $ref: '#/components/parameters/x-ads-force'
        - $ref: '#/components/parameters/x-ads-derivative-format'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPayload'
    parameters: []
  '/modelderivative/v2/designdata/{urn}/references':
    post:
      summary: Specify References
      tags:
        - Jobs
      responses:
        '200':
          description: Success
          headers:
            x-ads-app-identifier:
              $ref: '#/components/headers/x-ads-app-identifier'
            x-ads-duration:
              $ref: '#/components/headers/x-ads-duration'
            x-ads-startup-time:
              $ref: '#/components/headers/x-ads-startup-time'
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: reporting success status
                  urn:
                    type: string
                    description: the urn identifier of the source file
      operationId: specify-references
      description: |
        Specifies the location of the files referenced by the specified source design.

        If a source design contains references to other files, you must set  ``checkReferences`` to ``true``, when you call `Submit Translation Job </en/docs/model-derivative/v2/reference/http/job-POST>`_.  The Model Derivative service will then use the details you specify in this operation to locate and download the referenced files.
      security:
        - 2-legged:
            - 'data:read'
            - 'data:write'
            - 'data:create'
        - 3-legged:
            - 'data:read'
            - 'data:write'
            - 'data:create'
        - 3-legged-implicit:
            - 'data:read'
            - 'data:write'
            - 'data:create'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  urn: 'urn:adsk.objects:os.object:modelderivative/A5.iam'
                  filename: A5.iam
                  references:
                    - urn: 'urn:adsk.objects:os.object:modelderivative/01.ipt'
                      relativePath: refs/01.ipt
                      filename: 01.ipt
                      references:
                        - urn: 'urn:adsk.objects:os.object:modelderivative/011.ipt'
                          relativePath: refs/subfolder/011.ipt
                    - urn: 'urn:adsk.objects:os.object:modelderivative/02.ipt'
                      relativePath: x-refs/02.ipt
                      filename: 02.ipt
                      metadata:
                        myField1: Some Data1
                        myField2: Some Data2
                        myField3: Some Data3
              properties:
                urn:
                  type: string
                  description: The URN of the top level component of the design. Mandatory if the Base64 encoded urn in the request URL is a logical URN.
                region:
                  $ref: '#/components/schemas/Region'
                filename:
                  type: string
                  minLength: 1
                  description: 'The file name of the top level component. By default, it is set to ``""`` and the file will be download with its ``urn``.'
                references:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  description: 'An array of objects, where each object represents a referenced file.'
                  items:
                    type: object
                    properties:
                      urn:
                        type: string
                        minLength: 1
                        description: The URN of the referenced file.
                      relativePath:
                        type: string
                        minLength: 1
                        description: 'The path to the referenced file, relative to the top level component. By default, it is set to ``""``, which means that the referenced file and top level component are in the same folder.'
                      filename:
                        type: string
                        minLength: 1
                        description: 'The file name of the referenced file. By default, it is set to ``""`` and the referenced file will be downloaded by its ``urn`` and placed relative to the top-level component using ``relativePath``.'
                      metadata:
                        type: object
                        description: An object to hold custom metadata.
                    required:
                      - urn
                      - relativePath
                      - filename
              required:
                - urn
                - filename
                - references
    parameters:
      - name: urn
        in: path
        required: true
        schema:
          type: string
        description: The Base64 (URL Safe) encoded design URN
